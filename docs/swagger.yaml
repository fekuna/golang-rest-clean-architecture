basePath: /api/v1
definitions:
  httpErrors.RestError:
    properties:
      error:
        type: string
      status:
        type: integer
    type: object
  models.User:
    properties:
      about:
        maxLength: 1024
        type: string
      address:
        maxLength: 250
        type: string
      avatar_id:
        type: string
      birthday:
        maxLength: 10
        type: string
      city:
        maxLength: 24
        type: string
      country:
        maxLength: 24
        type: string
      created_at:
        type: string
      email:
        maxLength: 60
        type: string
      first_name:
        maxLength: 30
        type: string
      gender:
        maxLength: 10
        type: string
      last_name:
        maxLength: 30
        type: string
      login_date:
        type: string
      password:
        minLength: 6
        type: string
      phone_number:
        maxLength: 20
        type: string
      postcode:
        type: integer
      role:
        maxLength: 10
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    required:
    - first_name
    - last_name
    - password
    type: object
info:
  contact: {}
  description: Example Golang REST API
  title: Go Example REST API
  version: "1.0"
paths:
  /auth/{id}/avatar:
    post:
      consumes:
      - application/json
      description: Post user avatar image
      parameters:
      - description: Body with image file
        in: formData
        name: file
        required: true
        type: file
      - description: aws s3 bucket
        format: bucket
        in: query
        name: bucket
        required: true
        type: string
      - description: user_id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: Post avatar
      tags:
      - Auth
  /auth/login:
    post:
      consumes:
      - application/json
      description: login user, returns tokens and set session in DB
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Login user
      tags:
      - Auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: register new user, returns user and token
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
      summary: Register new user
      tags:
      - Auth
swagger: "2.0"
